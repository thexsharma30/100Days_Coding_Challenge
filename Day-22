//Question: Number of subarrays with maximum values in given range
//Given an array of N elements and L and R, print the number of sub-arrays such that the value of the maximum array element in that subarray is at least L and at most R.

class Solution{
    
    static long countSubarrays(int a[], int n, int L, int R)  
    { 
        // Complete the function
        long ans = 0;
        long max = -1, l=0, m = 0;
        for(int i=0; i<n; i++){
            if(a[i] >= L && a[i] <=R){
                l++; max = Math.max(max,a[i]);
                ans -= (m*(m+1))/2; m =0;
            }
            else if(a[i] < L){
                m++; l++;
            } else if(a[i] > R) {
                ans += (l*(l+1))/2; 
                ans -= (m*(m+1))/2;
                l = 0; m = 0;
            }
            
            if(i == n-1){
                ans += (l*(l+1))/2; 
                ans -= (m*(m+1))/2;
                l = 0; m = 0;
            }
        }
        return ans;
    }
}
