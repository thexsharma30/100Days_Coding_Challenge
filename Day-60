//Question: Grinding Geek
//GeeksforGeeks has introduced a special offer where you can enroll in any course, and if you manage to complete 90% of the course within 90 days, you will receive a refund of 90%.
//Geek was fascinated by this offer. This offer was valid for only n days, and each day a new course was available for purchase. 
//Geek decided that if he bought a course on some day, he will complete that course on the same day itself and redeem floor[90% of cost of the course] amount back. 
//Find the maximum number of courses that Geek can complete in those n days if he had total amount initially.

class Solution {
    
    public int max_courses(int n, int k, int[] arr) {
        
        int dp[][]=new int[k+1][arr.length+1];
        
        return solve(arr,k,0,dp);
    }
    public static int solve(int [] arr,int k,int i,int dp[][]){
        
        if(i==arr.length)
            return 0;
            
        if(dp[k][i]!=0)
            return dp[k][i];
            
        int a=0,b=0,c=0;
        if(k>=arr[i]){
            
            a += 1+solve(arr,(k-arr[i])+(int)(Math.floor((0.9*arr[i]))),i+1,dp);
        }
        b=solve(arr,k,i+1,dp);
        
        return dp[k][i]=Math.max(a,b);
    }
}
