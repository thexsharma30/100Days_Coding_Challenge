/*Question 1:Binary Search
Given a sorted array of size N and an integer K, find the position(0-based indexing) at which K is present in the array using binary search.*/

class Solution {
    int binarysearch(int arr[], int n, int k) {
        // code here
        int start=0;
        int end=n-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(arr[mid]==k) return mid;
            if(k<arr[mid]) end=mid-1;
            if(k>arr[mid]) start=mid+1;
        }
        return -1;
    }
}

/*Question 2:Second Largest
Given an array Arr of size N, print second largest distinct element from an array.*/

class Solution {
    int print2largest(int arr[], int n) {
        // code here
        Arrays.sort(arr);
        int max=arr[n-1],smax=-1,i;
        for(i=n-2;i>=0;i--){
            if(arr[i]<max){
                smax=arr[i];
                break;
            }
        }
        return smax;
    }
}
