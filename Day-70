//Question:Detect cycle in an undirected graph
/*Given an undirected graph with V vertices labelled from 0 to V-1 and E edges, 
check whether it contains any cycle or not. Graph is in the form of adjacency list where adj[i] contains all the nodes ith node is having edge with.*/

class Solution {
 public boolean isCycle(ArrayList<ArrayList<Integer>> adj, int src, boolean[] visited) {
       ArrayDeque<Integer> dq = new ArrayDeque<>();
       dq.add(src);
       
       while(dq.size() > 0){
           int rem = dq.remove();
           
           if(visited[rem]){
               return true;
           }
           visited[rem] = true;
           
           for(Integer nbr : adj.get(rem)){
               if(visited[nbr] == false){
                   dq.add(nbr);
               }
           }
       }
    return false;
    }
public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj){
    boolean[] visited = new boolean[V];
    
    for(int i=0; i<V; i++){
        if(visited[i] == false){
            boolean cycle = isCycle(adj, i, visited);
            if(cycle){
                return true;
            }
        }
    }
    return false;
}
}
