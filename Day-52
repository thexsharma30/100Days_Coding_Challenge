//Question:Split Array Largest Sum
//Given an array arr[] of N elements and a number K., split the given array into K subarrays such that the maximum 
//subarray sum achievable out of K subarrays formed is minimum possible. Find that possible subarray sum.

class Solution {
    public static int countPartition(int arr[],int maxSum){
        int partition=1;
        long subarraySum =0;
        for(int i=0;i<arr.length;i++){
            if(subarraySum+arr[i]<=maxSum){
                subarraySum += arr[i];
            }else{
                partition++;
                subarraySum = arr[i];
            }
        }
        return partition;
    }
    static int splitArray(int[] arr , int N, int K) {
        int low = arr[0];
        int high =0;
        // Find maximum and summation
        for(int i=0;i<arr.length;i++){
            low = Math.max(low,arr[i]);
            high += arr[i];
    }
     // Binary Search
        while(low<=high){
            int mid = (low+high)/2;
            int partitions = countPartition(arr,mid);
            if(partitions>K){
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        return low;
    }
};
