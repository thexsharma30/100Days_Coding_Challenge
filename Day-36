//Question : Candy
/*There are N children standing in a line. Each child is assigned a rating value given in the integer array ratings.
You are giving candies to these children subjected to the following requirements:
Each child must have atleast one candy.
Children with a higher rating than it's neighbours get more candies than neighbors.
Return the minimum number of candies you need to have to distribute.*/

class Solution {
    static int minCandy(int N, int ratings[]) {
        // code here
        if(N == 0) return 0;
       
       int[] left = new int[N];
       int[] right = new int[N];
       
       left[0] = 1;
       right[N-1] = 1;
       for(int i=1; i<N; i++) 
           left[i] = ratings[i] > ratings[i-1] ? left[i-1]+1 : 1;
        
        for(int i=N-2; i>=0; i--) 
           right[i] = ratings[i] > ratings[i+1] ? right[i+1]+1 : 1;
        
        int ans = 0;
        for(int i=0; i<N; i++) ans += Math.max(left[i], right[i]);
        
        return ans;
    }
}
